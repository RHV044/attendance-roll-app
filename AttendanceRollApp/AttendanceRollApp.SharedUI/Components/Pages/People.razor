@page "/people"
@using Microsoft.FluentUI.AspNetCore.Components
@inject NavigationManager NavigationManager;
@inject IPersonRepository PersonRepository;


<h1>Personas registradas</h1>
<p>Esta es la lista de personas que pueden registrar su asistencia con su tarjeta SUBE</p>

@if (people == null)
{
    <FluentProgress></FluentProgress>
}
else
{
    <FluentDataGrid Items="@people">
        <ChildContent>
            <PropertyColumn Property="@(p => p.NationalID)" Title="DNI" Sortable="true" />
            <PropertyColumn Property="@(p => $"{p.FirstName} {p.LastName}")" Title="Nombre" Sortable="true" />
            <PropertyColumn Property="@(p => p.Gender)" Title="Género" Sortable="true" />
            <PropertyColumn Property="@(p => p.BirthDate)" Title="Fecha nacimiento" Format="yyyy-MM-dd" Sortable="true" />
            <PropertyColumn Property="@(p => p.NfcSerialNumbers)" Title="Tarjetas SUBE" Sortable="true" />
            <PropertyColumn Property="@(p => p.CreatedDate)" Title="Fecha creación" Format="yyyy-MM-dd HH:mm" Sortable="true" />
            <PropertyColumn Property="@(p => p.LastUpdatedDate)" Title="Fecha última modificación" Format="yyyy-MM-dd HH:mm" Sortable="true" />
        </ChildContent>
        <EmptyContent>
            <FluentIcon Value="@(new Icons.Filled.Size24.Search())" Color="@Color.Accent" />
            &nbsp; No encontramos a nadie
        </EmptyContent>
    </FluentDataGrid>
}

<FluentButton IconStart="@(new Icons.Regular.Size20.Person())"
              Appearance="Appearance.Accent"
              OnClick="agregarPersona">
    Agregar Persona
</FluentButton>


@code {
    private IQueryable<Person>? people = null;

    protected override async Task OnInitializedAsync()
    {
        people = ((await PersonRepository.GetMany()) ?? new Person[] { }).AsQueryable();
    }

    private async Task agregarPersona()
    {

    }
}
